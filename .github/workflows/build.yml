name: Build

on:
  push:
    branches: [ "development", "uat", "main" ]
  workflow_dispatch:

jobs:

  build-and-push-to-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from github
        uses: actions/checkout@v3

      - name: Build image tag env
        run: |
          menv=$GITHUB_REF_NAME
          if [[ "$menv" == "main" ]]; then menv="prod"; fi
          if [[ "$menv" == "development" ]]; then menv="development"; fi
          if [[ "$menv" == "uat" ]]; then menv="uat"; fi
          echo RENV=$menv >> $GITHUB_ENV
          echo IMAGE_TAG=$menv-$(date +%y%m%d)-$(git rev-parse --short HEAD) >> $GITHUB_ENV
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200
          role-skip-session-tagging: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ secrets.AWS_REGISTRY }}
          REPOSITORY: cms-portal-fe
          IMAGE_TAG: ${{env.IMAGE_TAG}}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo $IMAGE_TAG > image_tag

      - uses: actions/upload-artifact@v3
        with:
          name: image_tag
          path: image_tag
